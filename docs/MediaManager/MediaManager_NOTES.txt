MediaManager.WPF

Updates:
	Add "Show Empty Volumes" button in top left
	Migrate volumes.json to CLOUD
    Be able to open this file from the client
	Create JSON file options (for each flattened MP3 directory, create a separate JSON):
		PROS:
            Manage user-specific preferences (i.e., user logs in to client)
			Be able to create m3u playlists on the fly using deserialized JSON
			May be possible to keep a directory structure in a JSON
			May be able to maintain a list of tags within each JSON
			Store more info than can be put into m3u files
			May be able to handle wide characters better (than having to maintain separate vlc-generated playlists)
			Allows assigning a quality value rather than just deleting from m3u
		CONS:			
			More files to have to maintain
			JSON file easy to get out of sync (may be able to update JSON when using FileMaze to move, delete, add files)
	FIX:
		

	On Click-to-AddPlaylist-to-Volume, check if already included (in other M3u)
	Create M3U (for CWD)
	Make FolderFilter lookup async (resolve multiple recursive calls)
	Hide Leafs that are already included (Checkbox)
	Fix issue New Item/name-change not updating in Nav pane

	Add/Remove where applicable:
		FileEntry
		(FileEntryVewModel)
		Folder
		FolderViewModel

dotnet new xunit --name MediaManagerTests --output MediaManagerTests
dotnet sln add .\MediaManagerTests\MediaManagerTests.csproj

dotnet new console --name SearchQuery --output SearchQuery
dotnet sln add .\SearchQuery\SearchQuery.csproj

+--------DATA BACKUP----------------------------------+--------+--------+--------+
+--------VOLUMES--------+
copy /y C:\src\dev\coder-foundry-2\docs\Data\Volumes.json %ONEDRIVE%\Data\Volumes-intelly.json

kdiff3 C:\src\dev\coder-foundry-2\docs\Data\Volumes.json C:\Users\zombi\OneDrive\Data\Volumes-intelly.json

+--------M3Us--------+

robocopy %MEDIA%\Music\MP3s %ONEDRIVE%\Data\Media-Track\Music\MP3s /e /s /if *.m3u /l

